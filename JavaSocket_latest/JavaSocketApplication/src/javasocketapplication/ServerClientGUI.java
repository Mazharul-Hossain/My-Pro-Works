/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javasocketapplication;

import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author farshad
 */
public class ServerClientGUI extends javax.swing.JFrame {

    /**
     * Creates new form ServerClientGUI
     */
    public ServerClientGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ServerClentTabbedPane = new javax.swing.JTabbedPane();
        ClientBackgroundPanel = new javax.swing.JPanel();
        ClientMethodsLayeredPane = new javax.swing.JLayeredPane();
        ClientSocketTCPRadioButton = new javax.swing.JRadioButton();
        ClientSocketUDPRadioButton = new javax.swing.JRadioButton();
        ClientRMIRadioButton = new javax.swing.JRadioButton();
        ClientChoseFileLayeredPane = new javax.swing.JLayeredPane();
        jTextField1 = new javax.swing.JTextField();
        ClientChooseButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        ClientTimeLayeredPane = new javax.swing.JLayeredPane();
        ClientLabelStartTime = new javax.swing.JLabel();
        ClientStartTimeTextField = new javax.swing.JTextField();
        ClientLabelEndTime = new javax.swing.JLabel();
        ClientEndTimeTextField = new javax.swing.JTextField();
        ClientTransferTimeLabel = new javax.swing.JLabel();
        ClientTransferTimeTextField = new javax.swing.JTextField();
        ClientSpeedLabel = new javax.swing.JLabel();
        ClientSpeedTextField = new javax.swing.JTextField();
        ClientServerIpPortPanel = new javax.swing.JPanel();
        ClientServerIPLabel = new javax.swing.JLabel();
        ClientServerIPTextField = new javax.swing.JTextField();
        ClientPortLabel = new javax.swing.JLabel();
        ClientPortTextField = new javax.swing.JTextField();
        ClientScrollPane = new javax.swing.JScrollPane();
        ClientDetailsPrintingTextArea = new javax.swing.JTextArea();
        ClientStartTxButton = new javax.swing.JButton();
        ClientTxrxProgressBar = new javax.swing.JProgressBar();
        ServerBackgroundPanel = new javax.swing.JPanel();
        ServerMethodsLayeredPane = new javax.swing.JLayeredPane();
        ServerSocketTCPRadioButton = new javax.swing.JRadioButton();
        ServerSocketUDPRadioButton = new javax.swing.JRadioButton();
        ServerRMIRadioButton = new javax.swing.JRadioButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        ServerSocketIpLabel = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        ServerPortLabel = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        ServerStartListeningButton = new javax.swing.JButton();
        ServerStopListeningButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ServerTxrxDetailsPrintingTextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        FileMenuServerMode = new javax.swing.JRadioButtonMenuItem();
        FileMenuClientMode = new javax.swing.JRadioButtonMenuItem();
        FileMenuExit = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ClientMethodsLayeredPane.setBorder(javax.swing.BorderFactory.createTitledBorder("<html>\n<b>Methods</b>\n</html>"));

        ClientSocketTCPRadioButton.setText("<html><b>Socket TCP</b></html>");
        ClientSocketTCPRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientSocketTCPRadioButtonActionPerformed(evt);
            }
        });

        ClientSocketUDPRadioButton.setText("<html><b>Socket UDP</b></html>");
        ClientSocketUDPRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientSocketUDPRadioButtonActionPerformed(evt);
            }
        });

        ClientRMIRadioButton.setText("<html><b>RMI (Registry 14445 )<b></html>");
        ClientRMIRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientRMIRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ClientMethodsLayeredPaneLayout = new javax.swing.GroupLayout(ClientMethodsLayeredPane);
        ClientMethodsLayeredPane.setLayout(ClientMethodsLayeredPaneLayout);
        ClientMethodsLayeredPaneLayout.setHorizontalGroup(
            ClientMethodsLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientMethodsLayeredPaneLayout.createSequentialGroup()
                .addGroup(ClientMethodsLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClientSocketTCPRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientSocketUDPRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientRMIRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 42, Short.MAX_VALUE))
        );
        ClientMethodsLayeredPaneLayout.setVerticalGroup(
            ClientMethodsLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientMethodsLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ClientSocketTCPRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ClientSocketUDPRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ClientRMIRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ClientMethodsLayeredPane.setLayer(ClientSocketTCPRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientMethodsLayeredPane.setLayer(ClientSocketUDPRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientMethodsLayeredPane.setLayer(ClientRMIRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ClientChoseFileLayeredPane.setBorder(javax.swing.BorderFactory.createTitledBorder("<html>\n<b>Choose a File</b>\n</html>"));

        jTextField1.setText("Enter Your File");

        ClientChooseButton.setText("<html>\n<b>Choose...</b>\n</html>");
        ClientChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientChooseButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("<html>\n<b>UDP Packet Size</b>\n</html>");

        jTextField2.setText("byte");

        javax.swing.GroupLayout ClientChoseFileLayeredPaneLayout = new javax.swing.GroupLayout(ClientChoseFileLayeredPane);
        ClientChoseFileLayeredPane.setLayout(ClientChoseFileLayeredPaneLayout);
        ClientChoseFileLayeredPaneLayout.setHorizontalGroup(
            ClientChoseFileLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientChoseFileLayeredPaneLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientChoseFileLayeredPaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ClientChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        ClientChoseFileLayeredPaneLayout.setVerticalGroup(
            ClientChoseFileLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientChoseFileLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(ClientChoseFileLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ClientChoseFileLayeredPane.setLayer(jTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientChoseFileLayeredPane.setLayer(ClientChooseButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientChoseFileLayeredPane.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientChoseFileLayeredPane.setLayer(jTextField2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ClientTimeLayeredPane.setBorder(javax.swing.BorderFactory.createTitledBorder("<html>\n<b>Time</b>\n</html>"));

        ClientLabelStartTime.setText("<html>\n<b>Start Time:</b>\n</html>");

        ClientLabelEndTime.setText("<html>\n<b>End Time:</b>\n</html>");

        ClientTransferTimeLabel.setText("<html>\n<b>Transfer Time:</b>\n</html>");

        ClientSpeedLabel.setText("<html>\n<b>Speed:</b>\n</html>");

        javax.swing.GroupLayout ClientTimeLayeredPaneLayout = new javax.swing.GroupLayout(ClientTimeLayeredPane);
        ClientTimeLayeredPane.setLayout(ClientTimeLayeredPaneLayout);
        ClientTimeLayeredPaneLayout.setHorizontalGroup(
            ClientTimeLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientTimeLayeredPaneLayout.createSequentialGroup()
                .addComponent(ClientLabelStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(ClientTimeLayeredPaneLayout.createSequentialGroup()
                .addGroup(ClientTimeLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClientStartTimeTextField)
                    .addComponent(ClientEndTimeTextField)
                    .addComponent(ClientTransferTimeTextField)
                    .addGroup(ClientTimeLayeredPaneLayout.createSequentialGroup()
                        .addGroup(ClientTimeLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClientLabelEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClientTransferTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ClientTimeLayeredPaneLayout.createSequentialGroup()
                                .addComponent(ClientSpeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ClientSpeedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 108, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ClientTimeLayeredPaneLayout.setVerticalGroup(
            ClientTimeLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientTimeLayeredPaneLayout.createSequentialGroup()
                .addComponent(ClientLabelStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(ClientStartTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientLabelEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientEndTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientTransferTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientTransferTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ClientTimeLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClientSpeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientSpeedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        ClientTimeLayeredPane.setLayer(ClientLabelStartTime, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientTimeLayeredPane.setLayer(ClientStartTimeTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientTimeLayeredPane.setLayer(ClientLabelEndTime, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientTimeLayeredPane.setLayer(ClientEndTimeTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientTimeLayeredPane.setLayer(ClientTransferTimeLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientTimeLayeredPane.setLayer(ClientTransferTimeTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientTimeLayeredPane.setLayer(ClientSpeedLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ClientTimeLayeredPane.setLayer(ClientSpeedTextField, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ClientServerIpPortPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("<html>\n<b>Server IP/Port</b>\n</html>"));

        ClientServerIPLabel.setText("<html> <b>Server IP:</b> </html>");

        ClientServerIPTextField.setText("127.0.0.1");

        ClientPortLabel.setText("<html><b>Port:</b></html>");

        ClientPortTextField.setText("1444");

        javax.swing.GroupLayout ClientServerIpPortPanelLayout = new javax.swing.GroupLayout(ClientServerIpPortPanel);
        ClientServerIpPortPanel.setLayout(ClientServerIpPortPanelLayout);
        ClientServerIpPortPanelLayout.setHorizontalGroup(
            ClientServerIpPortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientServerIpPortPanelLayout.createSequentialGroup()
                .addComponent(ClientServerIPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientServerIPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClientPortTextField))
        );
        ClientServerIpPortPanelLayout.setVerticalGroup(
            ClientServerIpPortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientServerIpPortPanelLayout.createSequentialGroup()
                .addGroup(ClientServerIpPortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClientServerIPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientServerIPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClientPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        ClientDetailsPrintingTextArea.setEditable(false);
        ClientDetailsPrintingTextArea.setColumns(20);
        ClientDetailsPrintingTextArea.setRows(5);
        ClientScrollPane.setViewportView(ClientDetailsPrintingTextArea);

        ClientStartTxButton.setBackground(new java.awt.Color(0, 102, 0));
        ClientStartTxButton.setText("<html>\n<b>Start Transfer</b>\n</html>");
        ClientStartTxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientStartTxButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ClientBackgroundPanelLayout = new javax.swing.GroupLayout(ClientBackgroundPanel);
        ClientBackgroundPanel.setLayout(ClientBackgroundPanelLayout);
        ClientBackgroundPanelLayout.setHorizontalGroup(
            ClientBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientBackgroundPanelLayout.createSequentialGroup()
                .addGroup(ClientBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientBackgroundPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(ClientBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClientScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ClientBackgroundPanelLayout.createSequentialGroup()
                                .addComponent(ClientStartTxButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ClientTxrxProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientBackgroundPanelLayout.createSequentialGroup()
                        .addGroup(ClientBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ClientBackgroundPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ClientMethodsLayeredPane)
                                .addGap(18, 18, 18)
                                .addComponent(ClientChoseFileLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ClientServerIpPortPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(ClientTimeLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        ClientBackgroundPanelLayout.setVerticalGroup(
            ClientBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientBackgroundPanelLayout.createSequentialGroup()
                .addGroup(ClientBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ClientBackgroundPanelLayout.createSequentialGroup()
                        .addGroup(ClientBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ClientMethodsLayeredPane, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClientChoseFileLayeredPane, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClientServerIpPortPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ClientTimeLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ClientBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ClientStartTxButton)
                    .addComponent(ClientTxrxProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(ClientScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );

        ServerClentTabbedPane.addTab("Client", ClientBackgroundPanel);

        ServerMethodsLayeredPane.setBorder(javax.swing.BorderFactory.createTitledBorder("<html>\n<b>Methods</b>\n</html>"));

        ServerSocketTCPRadioButton.setText("<html><b>Socket TCP</b></html>");
        ServerSocketTCPRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServerSocketTCPRadioButtonActionPerformed(evt);
            }
        });

        ServerSocketUDPRadioButton.setText("<html><b>Socket UDP</b></html>");
        ServerSocketUDPRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServerSocketUDPRadioButtonActionPerformed(evt);
            }
        });

        ServerRMIRadioButton.setText("<html><b>RMI (Registry 14445 )</b></html>");
        ServerRMIRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServerRMIRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ServerMethodsLayeredPaneLayout = new javax.swing.GroupLayout(ServerMethodsLayeredPane);
        ServerMethodsLayeredPane.setLayout(ServerMethodsLayeredPaneLayout);
        ServerMethodsLayeredPaneLayout.setHorizontalGroup(
            ServerMethodsLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ServerMethodsLayeredPaneLayout.createSequentialGroup()
                .addGroup(ServerMethodsLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ServerSocketTCPRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ServerSocketUDPRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ServerRMIRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ServerMethodsLayeredPaneLayout.setVerticalGroup(
            ServerMethodsLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ServerMethodsLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ServerSocketTCPRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ServerSocketUDPRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ServerRMIRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        ServerMethodsLayeredPane.setLayer(ServerSocketTCPRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ServerMethodsLayeredPane.setLayer(ServerSocketUDPRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ServerMethodsLayeredPane.setLayer(ServerRMIRadioButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("<html>\n<b>ServerIp/Port</b>\n</html>"));

        ServerSocketIpLabel.setText("<html><b>Socket IP:</b></html>");

        jTextField3.setText("127.0.0.1");

        ServerPortLabel.setText("<html><b>Port:</b></html>");

        jTextField4.setText("1444");

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(ServerSocketIpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ServerPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 29, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ServerSocketIpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ServerPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jLayeredPane1.setLayer(ServerSocketIpLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTextField3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ServerPortLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTextField4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("<html>\n<b>Listening</b>\n</html>"));

        ServerStartListeningButton.setBackground(new java.awt.Color(0, 102, 0));
        ServerStartListeningButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rssgreen.png"))); // NOI18N
        ServerStartListeningButton.setText("<html>\n<b>Start Listening</b>\n</html>");
        ServerStartListeningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServerStartListeningButtonActionPerformed(evt);
            }
        });

        ServerStopListeningButton.setBackground(new java.awt.Color(153, 0, 0));
        ServerStopListeningButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rssorange.png"))); // NOI18N
        ServerStopListeningButton.setText("<html>\n<b>Stop Listening</b>\n</html>");
        ServerStopListeningButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServerStopListeningButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ServerStartListeningButton, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .addComponent(ServerStopListeningButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ServerStartListeningButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ServerStopListeningButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane2.setLayer(ServerStartListeningButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(ServerStopListeningButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ServerTxrxDetailsPrintingTextArea.setEditable(false);
        ServerTxrxDetailsPrintingTextArea.setColumns(20);
        ServerTxrxDetailsPrintingTextArea.setRows(5);
        jScrollPane1.setViewportView(ServerTxrxDetailsPrintingTextArea);

        javax.swing.GroupLayout ServerBackgroundPanelLayout = new javax.swing.GroupLayout(ServerBackgroundPanel);
        ServerBackgroundPanel.setLayout(ServerBackgroundPanelLayout);
        ServerBackgroundPanelLayout.setHorizontalGroup(
            ServerBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ServerBackgroundPanelLayout.createSequentialGroup()
                .addGroup(ServerBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ServerBackgroundPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ServerBackgroundPanelLayout.createSequentialGroup()
                        .addComponent(ServerMethodsLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ServerBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLayeredPane1)
                            .addComponent(jLayeredPane2))))
                .addGap(0, 258, Short.MAX_VALUE))
        );
        ServerBackgroundPanelLayout.setVerticalGroup(
            ServerBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ServerBackgroundPanelLayout.createSequentialGroup()
                .addGroup(ServerBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ServerBackgroundPanelLayout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ServerMethodsLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );

        ServerClentTabbedPane.addTab("Server", ServerBackgroundPanel);

        jMenu1.setText("File");

        FileMenuServerMode.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        FileMenuServerMode.setSelected(true);
        FileMenuServerMode.setText("Server Mode");
        FileMenuServerMode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dbplus.png"))); // NOI18N
        FileMenuServerMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuServerModeActionPerformed(evt);
            }
        });
        jMenu1.add(FileMenuServerMode);

        FileMenuClientMode.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        FileMenuClientMode.setSelected(true);
        FileMenuClientMode.setText("Client Mode");
        FileMenuClientMode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contact.png"))); // NOI18N
        FileMenuClientMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuClientModeActionPerformed(evt);
            }
        });
        jMenu1.add(FileMenuClientMode);

        FileMenuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        FileMenuExit.setSelected(true);
        FileMenuExit.setText("Exit");
        FileMenuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DeleteRed.png"))); // NOI18N
        FileMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileMenuExitActionPerformed(evt);
            }
        });
        jMenu1.add(FileMenuExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ServerClentTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ServerClentTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClientChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientChooseButtonActionPerformed
        // TODO add your handling code here:
        //Adding a JFilechooser to the button to fetch the path of the file to transfer
        JFileChooser fileChooser = new JFileChooser();
        int returnVal = fileChooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION){
            File inFile = fileChooser.getSelectedFile();
            //pass the file to the start transfer button.
            //To be added later
            //get and show the file path in the textbox
            filePath  = inFile.getAbsolutePath();
            jTextField1.setText(filePath);
            //System.out.println("FilePath:"+filePath);
            long fileSize = inFile.length();
            String size = String.valueOf(fileSize);
            jTextField2.setText(size +"bytes");
        }
    }//GEN-LAST:event_ClientChooseButtonActionPerformed

    private void ClientStartTxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientStartTxButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClientStartTxButtonActionPerformed

    private void ClientSocketTCPRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientSocketTCPRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClientSocketTCPRadioButtonActionPerformed

    private void ClientSocketUDPRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientSocketUDPRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClientSocketUDPRadioButtonActionPerformed

    private void ClientRMIRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientRMIRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClientRMIRadioButtonActionPerformed

    private void ServerStartListeningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServerStartListeningButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ServerStartListeningButtonActionPerformed

    private void ServerStopListeningButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServerStopListeningButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ServerStopListeningButtonActionPerformed

    private void ServerSocketTCPRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServerSocketTCPRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ServerSocketTCPRadioButtonActionPerformed

    private void ServerSocketUDPRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServerSocketUDPRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ServerSocketUDPRadioButtonActionPerformed

    private void ServerRMIRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServerRMIRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ServerRMIRadioButtonActionPerformed

    private void FileMenuServerModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuServerModeActionPerformed
        // TODO add your handling code here:
        ServerClentTabbedPane.setSelectedIndex(1);
    }//GEN-LAST:event_FileMenuServerModeActionPerformed

    private void FileMenuClientModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuClientModeActionPerformed
        // TODO add your handling code here:
        ServerClentTabbedPane.setSelectedIndex(0);
    }//GEN-LAST:event_FileMenuClientModeActionPerformed

    private void FileMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileMenuExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_FileMenuExitActionPerformed

    /**
     * @param args the command line arguments
     */
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
   
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerClientGUI().setVisible(true);
            }
        });
    }
    //My functions
   // function for writing progress info in the text area of client
    public void ClientPrintMsg(String StartTime, String EndTime, String TrnsfrTime, String Speed){
        this.ClientDetailsPrintingTextArea.setText(StartTime); 
    }
    //function for writing progress info in textarea of server
    public void ServerPrintMsg(String StartTime, String EndTime, String TrnsfrTime, String Speed){
       ServerTxrxDetailsPrintingTextArea.setText(StartTime);
    }
    //My variables
    public static String filePath = new String();
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ClientBackgroundPanel;
    private javax.swing.JButton ClientChooseButton;
    private javax.swing.JLayeredPane ClientChoseFileLayeredPane;
    private javax.swing.JTextArea ClientDetailsPrintingTextArea;
    private javax.swing.JTextField ClientEndTimeTextField;
    private javax.swing.JLabel ClientLabelEndTime;
    private javax.swing.JLabel ClientLabelStartTime;
    private javax.swing.JLayeredPane ClientMethodsLayeredPane;
    private javax.swing.JLabel ClientPortLabel;
    private javax.swing.JTextField ClientPortTextField;
    private javax.swing.JRadioButton ClientRMIRadioButton;
    private javax.swing.JScrollPane ClientScrollPane;
    private javax.swing.JLabel ClientServerIPLabel;
    private javax.swing.JTextField ClientServerIPTextField;
    private javax.swing.JPanel ClientServerIpPortPanel;
    private javax.swing.JRadioButton ClientSocketTCPRadioButton;
    private javax.swing.JRadioButton ClientSocketUDPRadioButton;
    private javax.swing.JLabel ClientSpeedLabel;
    private javax.swing.JTextField ClientSpeedTextField;
    private javax.swing.JTextField ClientStartTimeTextField;
    private javax.swing.JButton ClientStartTxButton;
    private javax.swing.JLayeredPane ClientTimeLayeredPane;
    private javax.swing.JLabel ClientTransferTimeLabel;
    private javax.swing.JTextField ClientTransferTimeTextField;
    private javax.swing.JProgressBar ClientTxrxProgressBar;
    private javax.swing.JRadioButtonMenuItem FileMenuClientMode;
    private javax.swing.JRadioButtonMenuItem FileMenuExit;
    private javax.swing.JRadioButtonMenuItem FileMenuServerMode;
    private javax.swing.JPanel ServerBackgroundPanel;
    private javax.swing.JTabbedPane ServerClentTabbedPane;
    private javax.swing.JLayeredPane ServerMethodsLayeredPane;
    private javax.swing.JLabel ServerPortLabel;
    private javax.swing.JRadioButton ServerRMIRadioButton;
    private javax.swing.JLabel ServerSocketIpLabel;
    private javax.swing.JRadioButton ServerSocketTCPRadioButton;
    private javax.swing.JRadioButton ServerSocketUDPRadioButton;
    private javax.swing.JButton ServerStartListeningButton;
    private javax.swing.JButton ServerStopListeningButton;
    private javax.swing.JTextArea ServerTxrxDetailsPrintingTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
